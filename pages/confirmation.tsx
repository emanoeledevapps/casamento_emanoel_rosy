import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { useState } from 'react';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import axios from 'axios';
import { ModalSuccess } from '../src/components/ModalSuccess';
import {HiHome} from 'react-icons/hi';
import {FaInfoCircle} from 'react-icons/fa';
import ImgHeader from '/public/assets/nome-branco.png';

export default function Confirmation() {
    const [name, setName] = useState('');
    const [confirm, setConfirm] = useState('');
    const [age, setAge] = useState('');
    const [loading, setLoading] = useState(false);
    const [modalSuccess, setModalSuccess] = useState(false);
    const [nameConfirm, setNameConfirm] = useState('');

    async function handleConfirm(){
        if(loading){
            return;
        }
        if(!name.trim()){
            toast.error('Digite seu nome');
            return;
        }
        if(!confirm.trim()){
            toast.error('Digite "SIM" para confirmar');
            return;
        }
        if(confirm !== 'SIM'){
            toast.error('É necessário digitar "SIM" para confirmar');
            return;
        }

        try{
            setLoading(true);
            const responseConfirm = await axios.post('https://listapresen-aserver-production.up.railway.app/confirmations', {
                name,
                confirmation: true,
                age: Number(age)
            });
            
            setNameConfirm(name);
            setName('');
            setConfirm('');
            setModalSuccess(true);
        }catch(err){
            if(err.response.data.text === 'people exists'){
                toast.error('Esse nome já está confirmado na lista!');
                return;
            }

            toast.error('Algo deu errado, tente novamente!')
        }finally{
            setLoading(false);
        }
    }

    return (
        <div className="flex flex-col items-center">
            <Head>
                <title>Emanoel & Rosi - Casamento</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.png" />
            </Head>

            <header className="w-full h-20 border-b-2 flex justify-center items-center bg-[#cb6834] fixed">
                <Image
                    src={ImgHeader}
                    alt='Imagem dos noivos'
                    className='w-[150px] object-contain'
                />
            </header>

            <main className='flex flex-col w-full lg:w-[500px] mt-24 px-3'>
                <label htmlFor="name" className="font-bold text-[#cb6843]">Seu nome (Completo):</label>
                <input
                    id='name'
                    className='bg-gray-200 rounded-md border-2 border-[#cb6843] px-2 py-2'
                    value={name}
                    onChange={(e) => setName(e.target.value)}
                    placeholder='Digite seu nome completo'
                />

                <label htmlFor="confirm" className="font-bold text-[#cb6843] mt-5">Para confirmar digite (SIM):</label>
                <input
                    id='confirm'
                    className='bg-gray-200 rounded-md border-2 border-[#cb6843] px-2 py-2'
                    value={confirm}
                    onChange={(e) => setConfirm(e.target.value.toUpperCase())}
                    placeholder='Digite "SIM"'
                />

                <label htmlFor="age" className="font-bold text-[#cb6843] mt-5">Idade (Caso seja criança):</label>
                <input
                    id='age'
                    className='bg-gray-200 rounded-md border-2 border-[#cb6843] px-2 py-2'
                    value={age}
                    type='number'
                    onChange={(e) => setAge(e.target.value.toUpperCase())}
                    placeholder='Digite a idade aqui'
                />

                <div className="bg-gray-200 rounded-md p-3 flex mt-5 gap-2">
                    <FaInfoCircle color='#aaa' size={30}/>
                    <p className="text-gray-500">Se você for confirmar a presença de mais de uma pessoa, confirme uma por vez!</p>
                </div>

                <button
                    className='flex items-center justify-center rounded-3xl font-bold text-white text-lg bg-[#cb6843] h-14 px-3 mt-7'
                    onClick={handleConfirm}
                >
                    {loading ? 'Confirmando... Aguarde' : 'Confirmar presença'}
                </button>

                <Link
                    className='flex items-center justify-center rounded-3xl font-bold text-[#cb6843] text-lg border-4 border-[#cb6843] h-14 px-3 mt-2'
                    href='/'
                >
                    <HiHome color='#cb6843' size={24}/>
                    Voltar para o início
                </Link>

                <h4 className="font-bold text-[#cb6843] mt-10 text-center">Quer nos presentear?</h4>
                <p className="text-black text-center">Fique a vontade para enviar qualquer valor de sua preferência</p>

                <div className='flex flex-col items-center justify-center gap-3 py-5 lg:flex-row'>
                    <Image
                        alt='Qr code pix'
                        src={require('../public/assets/qr.jpg')}
                        className='w-[180px] object-contain'
                    />

                    <div className='flex flex-col items-center'>
                        <h4 className='font-bold text-[#cb6843]'>ROSIRENE ENEDINA DA SILVA</h4>
                        <h4 className='font-bold text-black'>Banco Bradesco</h4>

                        <h4 className='font-bold text-[#cb6843] text-lg mt-3'>428.535.638-47</h4>
                        <h4 className='font-bold text-black'>Chave PIX CPF</h4>
                    </div>
                </div>
            </main>

            <footer>
                
            </footer>

            <ToastContainer
                position='top-center'
            />

            {modalSuccess && (
                <ModalSuccess
                    close={() => setModalSuccess(false)}
                    name={nameConfirm}
                />
            )}
        </div>
    )
}
